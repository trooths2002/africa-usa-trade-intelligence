name: CI â€” tests, lint, security

on:
  pull_request:
    branches: [ main ]

jobs:
  checks:
    name: Checks (lint, tests, pip-audit)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            src/requirements.txt

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install project dependencies
        run: |
          pip install -r requirements.txt
          # Install tools used by CI
          pip install ruff pip-audit

      - name: Lint with ruff
        run: |
          # Fail the job on lint errors
          ruff check .

      - name: Run tests (project tests only)
        run: |
          pytest tests/ -q

      - name: Run pip-audit
        run: |
          # Run pip-audit and fail the job if vulnerabilities are found
          pip-audit

      - name: Smoke test
        env:
          HEALTH_API_URL: http://localhost:8000
        run: |
          # Start the health service in the background
          uvicorn src.health.main:app --host 0.0.0.0 --port 8000 &
          sleep 5
          # Run smoke test
          python - <<'PY'
          import requests, os
          url = os.environ.get("HEALTH_API_URL", "http://localhost:8000")
          r = requests.get(f"{url}/health", timeout=15)
          r.raise_for_status()
          print(f"Health check passed: {r.json()}")
          PY

  mcp-tests:
    name: MCP stdio server tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            src/requirements.txt

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r src/requirements.txt || true

      - name: Run MCP server test
        run: |
          pytest -q tests/test_mcp_server.py